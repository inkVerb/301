#!/bin/bash

# . means "include" the text from the indicated source file as text here
#   regardless of that file's executable permissions

echo "This is from '. INCLUDED-FILE'"

# ./ means "here" or "PWD" (Present Working Directory)
#    This is comparable to a "relative path" in web coding
#    This could be an absolute path, such as: ~/School/VIP/shell/301/07-included

. ~/School/VIP/shell/301/07-sourced


# Let's have some fun...

echo "$var56"

# Now, done differently with "source" instead of a "."

# Lines 24 & 27 only work in BASH (#!/bin/bash), not Shell (#!/bin/sh)

# This uses a "local" path, not a full path
#. ./07-sourced

# In BASH, "source" = .
#source ./07-sourced-also

echo "$ALSOvar56"

echo "In BASH: Use '. ' or 'source ' to \"include\" text from another script in your script"
